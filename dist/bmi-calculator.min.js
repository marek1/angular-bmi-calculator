"use strict";var bmiModule=angular.module("bmiModule",[]).constant("metric",["m","cm","kg","g"]).constant("imperial",["ft","in","st","lb"]).constant("imperialMetricMap",{kg:{g:1e3,st:.157473,lb:2.20462},g:{kg:.001,st:157473e-9,lb:.00220462},st:{kg:6.35029,g:6350.29,lb:14},lb:{kg:.453592,g:453.592,st:.0714286},m:{cm:100,ft:3.28084,"in":39.3701},cm:{m:.01,ft:.0328084,"in":.393701},ft:{m:.3048,cm:30.48,"in":12},"in":{m:.0254,cm:2.54,ft:.0833333}}).service("BmiCalculatorService",["imperialMetricMap",function(t){this.convert=function(e,r,a){return isNaN(a)?void 0:a*t[e][r]}}]).controller("BmiCalculatorController",["$scope","$timeout","BmiCalculatorService","metric","imperial",function(t,e,r,a,i){var l={metric:function(){t.ctrl.userData.bmi=!t.ctrl.userData.weight.kg||isNaN(t.ctrl.userData.weight.kg)||!t.ctrl.userData.height.cm||isNaN(t.ctrl.userData.height.cm)||parseInt(t.ctrl.userData.weight.kg)<=0||parseInt(t.ctrl.userData.height.cm)<=0?0:parseFloat(parseFloat(t.ctrl.userData.weight.kg)/Math.pow(parseFloat(parseFloat(t.ctrl.userData.height.cm)/100),2)).toFixed(1)},imperial:function(){t.ctrl.userData.bmi=!t.ctrl.userData.weight.st&&!t.ctrl.userData.weight.lb||isNaN(t.ctrl.userData.weight.st)||isNaN(t.ctrl.userData.weight.lb)||parseInt(t.ctrl.userData.weight.st)<=0&&parseInt(t.ctrl.userData.weight.lb)<=0||!t.ctrl.userData.height.ft&&!t.ctrl.userData.height["in"]||isNaN(t.ctrl.userData.height.ft)||isNaN(t.ctrl.userData.height["in"])||parseInt(t.ctrl.userData.height.ft)<=0&&parseInt(t.ctrl.userData.height["in"])<=0?0:(703*(parseFloat(r.convert("st","lb",t.ctrl.userData.weight.st?t.ctrl.userData.weight.st:0))+parseFloat(t.ctrl.userData.weight.lb?t.ctrl.userData.weight.lb:0))/Math.pow(parseFloat(r.convert("ft","in",t.ctrl.userData.height.ft?t.ctrl.userData.height.ft:0))+parseFloat(t.ctrl.userData.height["in"]?t.ctrl.userData.height["in"]:0),2)).toFixed(1)}};t.ctrl.userData=t.ctrl.userData||{height:{m:0,cm:0,ft:0,"in":0},weight:{kg:0,g:0,st:0,lb:0},unit:"metric",bmi:0},t.metricHeight="cm",t.metricWeight="kg";var s=function(e,a){for(var s in t.ctrl.userData[e])if(!t.ctrl.userData[e][s]||a!==s)for(var n in t.ctrl.userData[e])s!==n&&t.ctrl.userData[e][n]&&!isNaN(t.ctrl.userData[e][n])&&("height"===e&&("cm"!==s&&"m"!==s||"cm"!==n&&"m"!==n||(t.ctrl.userData.height[s]=parseFloat(r.convert(n,s,t.ctrl.userData.height[n])).toFixed(2)),"ft"===a||"in"===a||"ft"!==s&&"in"!==s||"m"!==n&&"cm"!==n||(t.ctrl.userData.height.ft=Math.floor(r.convert(n,"ft",t.ctrl.userData.height[n])),t.ctrl.userData.height["in"]=parseFloat(parseFloat("0."+r.convert(n,"ft",t.ctrl.userData.height[n]).toString().replace(",",".").split(".")[1])*r.convert("ft","in",1)).toFixed(4)),("undefined"==typeof a||i.indexOf(a)>-1)&&("m"!==s&&"cm"!==s||"ft"!==n||(t.ctrl.userData.height[s]=parseFloat(r.convert("ft",s,parseFloat(t.ctrl.userData.height.ft)+parseFloat(parseFloat(t.ctrl.userData.height["in"])/r.convert("ft","in",1)))).toFixed(2)))),"weight"===e&&("kg"!==s&&"g"!==s||"kg"!==n&&"g"!==n||(t.ctrl.userData.weight[s]=parseFloat(r.convert(n,s,t.ctrl.userData.weight[n])).toFixed(2)),"st"===a||"lb"===a||"st"!==s&&"lb"!==s||"kg"!==n&&"g"!==n||(t.ctrl.userData.weight.st=Math.floor(r.convert(n,"st",t.ctrl.userData.weight[n])),t.ctrl.userData.weight.lb=parseFloat(parseFloat("0."+r.convert(n,"st",t.ctrl.userData.weight[n]).toString().replace(",",".").split(".")[1])*r.convert("st","lb",1)).toFixed(4)),("undefined"==typeof a||i.indexOf(a)>-1)&&("kg"!==s&&"g"!==s||"st"!==n||(t.ctrl.userData.weight[s]=parseFloat(r.convert("st",s,parseFloat(t.ctrl.userData.weight.st)+parseFloat(parseFloat(t.ctrl.userData.weight.lb)/r.convert("st","lb",1)))).toFixed(2)))));l.metric()};s("height"),s("weight"),t.changedValue=function(e,r){var i=a.indexOf(r)>-1?t.bmiform.metric:t.bmiform.imperial;if("undefined"!=typeof r){var l=i[r].$viewValue;isNaN(l)||parseFloat(l)<0?i[r].$setValidity("required",!1):(i[r].$setValidity("required",!0),s(e,r))}},t.translate={cm:function(t){return t+" cm"},kg:function(t){return t+" kg"},ft:function(t){return t+" ft"},"in":function(t){return t+" in"},st:function(t){return t+" st"},lb:function(t){return t+" lb"}},t.$on("slideEnded",function(t){e(function(){s(t.targetScope.rzSliderUnitType,t.targetScope.rzSliderUnit)},1)})}]).directive("bmiCalculator",function(){return{restrict:"EA",controller:"BmiCalculatorController",controllerAs:"ctrl",bindToController:!0,scope:{userData:"=",displayType:"@"},template:'<div class="bmi-calculator"><select data-ng-model="ctrl.userData.unit"><option value="metric">Metric</option><option value="imperial">Imperial</option></select><div data-ng-show="ctrl.userData.unit===\'metric\'"><form name="bmiform.metric"><div class="input-group"><input type="text" id="m" name="m" data-ng-show="metricHeight===\'m\'" data-ng-model="ctrl.userData.height.m" data-ng-change="changedValue(\'height\', \'m\')"> <input type="text" id="cm" name="cm" data-ng-show="metricHeight===\'cm\'" data-ng-model="ctrl.userData.height.cm" data-ng-change="changedValue(\'height\', \'cm\')"><select data-ng-model="metricHeight"><option value="cm">cm</option><option value="m">m</option></select></div><div class="input-group"><input type="text" id="g" name="g" data-ng-show="metricWeight===\'g\'" data-ng-model="ctrl.userData.weight.g" data-ng-change="changedValue(\'weight\', \'g\')" required> <input type="text" id="kg" name="kg" data-ng-show="metricWeight===\'kg\'" data-ng-model="ctrl.userData.weight.kg" data-ng-change="changedValue(\'weight\', \'kg\')" required><select data-ng-model="metricWeight"><option value="kg">kg</option><option value="g">g</option></select></div></form><div data-ng-show="ctrl.displayType===\'graphical\'"><rzslider rz-slider-unit="cm" rz-slider-unit-type="height" rz-slider-floor="30" rz-slider-ceil="300" rz-slider-model="ctrl.userData.height.cm" rz-slider-translate="translate.cm"></rzslider><rzslider rz-slider-unit="kg" rz-slider-unit-type="weight" rz-slider-floor="30" rz-slider-ceil="500" rz-slider-model="ctrl.userData.weight.kg" rz-slider-translate="translate.kg"></rzslider></div><div><b>MY BMI is : {{ctrl.userData.bmi}}</b></div></div><div data-ng-show="ctrl.userData.unit===\'imperial\'"><form name="bmiform.imperial"><div class="input-group"><label for="ft">ft</label><input type="text" id="ft" name="ft" data-ng-model="ctrl.userData.height.ft" data-ng-change="changedValue(\'height\', \'ft\')"></div><div class="input-group"><label for="in">in</label><input type="text" id="in" name="in" min="0&quot;" max="12" data-ng-model="ctrl.userData.height.in" data-ng-change="changedValue(\'height\', \'in\')"></div><div class="input-group"><label for="st">st</label><input type="text" id="st" name="st" data-ng-model="ctrl.userData.weight.st" data-ng-change="changedValue( \'weight\', \'st\')"></div><div class="input-group"><label for="lb">lb</label><input type="text" id="lb" name="lb" min="0&quot;" max="14" data-ng-model="ctrl.userData.weight.lb" data-ng-change="changedValue(\'weight\', \'lb\')"></div></form><div data-ng-show="ctrl.displayType===\'graphical\'"><rzslider rz-slider-unit="ft" rz-slider-unit-type="height" rz-slider-floor="1" rz-slider-ceil="10" rz-slider-model="ctrl.userData.height.ft" rz-slider-translate="translate.ft"></rzslider><rzslider rz-slider-unit="in" rz-slider-unit-type="height" rz-slider-floor="1" rz-slider-ceil="12" rz-slider-model="ctrl.userData.height.in" rz-slider-translate="translate.in"></rzslider><rzslider rz-slider-unit="st" rz-slider-unit-type="weight" rz-slider-floor="1" rz-slider-ceil="80" rz-slider-model="ctrl.userData.weight.st" rz-slider-translate="translate.st"></rzslider><rzslider rz-slider-unit="lb" rz-slider-unit-type="weight" rz-slider-floor="1" rz-slider-ceil="14" rz-slider-model="ctrl.userData.weight.lb" rz-slider-translate="translate.lb"></rzslider></div><div><b>MY BMI is : {{ctrl.userData.bmi}}</b></div></div></div>',link:function(t,e){}}});